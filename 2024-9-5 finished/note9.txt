开始泛型和线程的学习

1.泛型
<数据类型> 作为修饰前缀来限制容器、类的数据类型
使用泛型的好处：
编译时添加了元素类型的检查机制来提高安全性；减少了类型转换的次数
java泛型可以保证如果程序在编译时没有发出警告，运行时就不会产生ClassCastException异常
泛型可以一次方多个 <数据类型1， 数据类型2>
泛型包括泛型类、泛型方法、泛型接口

类型通配符：
<?>表示接受任何类型
<? extends Animal> 表示接受Animal和Animal的子类
<? super Animal> 表示接受Animal和Animal的父类

泛型机制：
通过底层原理可以知道，泛型只在编译时起作用，编译后泛型参数会被擦除，并替换上限类型或Object
通常不会创建泛型数组 而是直接使用ArrayList<T> 来替代或者使用类型转换来间接实现
#Homework81 泛型练习题

JUnit单元测试框架
#Homework82 泛型练习与JUnit在idea中的使用

2.线程
通过实现Thread类或Runnable接口来创建


